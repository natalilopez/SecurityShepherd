title.question.m_insecure_data_storeage =  ¿En qu&eacute; consiste el almacenamiento de datos inseguro en móviles (Mobile Insecure Data Storage)?

paragraph.info.1 = El almacenamiento de datos inseguro ocurre cuando una aplicaci&oacute;n almacena datos o informaci&oacute;n sensible (credenciales de usuario, claves de API, Informaci&oacute;n de tarjetas de pago etc.) de forma insegura. Esto puede producirse de varias formas. Generalmente, para almacenar informaci&oacute;n en el lado del cliente (Client-side) las aplicaciones utilizan una base de datos <a>Sqlite</a>.
paragraph.info.2 = Esto se produce en parte, por el hecho de que este m&eacute;todo de almacenamiento resulta m&aacute;s barato - Un servicio de almacenamiento back end ser&iacute;a m&aacute;s costoso. Como resultado, cualquier usuario puede acceder a la informaci&oacute;n almacenada por la aplicaci&oacute;m. El almacenamiento de datos inseguro se convierte en un peligro cuando la aplicaci&oacute;n del usuario guarda informaci&oacute;n sensible en cache, 
This can be a favoured, cheaper method of storage instead of using a more expensive back end service. As a result, any user can access the data stored by the App. Insecure Data Storage becomes a danger when a user's App caches sensitive data, their phone is stolen or the attacker steals this information from local databases. Malware can also access this information easily. This risk is increased by the popularity of <a>rooting devices</> which makes it much easier for an attacker to access this information.
paragraph.info.3 = There are other ways to store data insecurely. Using known broken hashing algorithms can lead to pain for the Apps users. Not only are they susceptible to <a>collisions</a>, where two different passwords can	potentially generate the same hash and be interpreted as the same password, the developer would have to assume that their user's use strong passwords. This is generally never the case and once a hashed value has been cracked, an attacker merely needs to update their tables.
paragraph.info.4 = This method still uses no key, Therefore one could assume it is not	truly encryption? Hashing algorithms are useful for comparing two different files but should not be used for storage of passwords (Unless done correctly).

button.hideIntro = Hide Lesson Introduction
button.showIntro = Show Lesson Introduction

challenge.description = Typically an Android app will store it's database in the <a>/data/data/com.app.exampleApp/database/</a> directory. Anyone with a rooted device can access this directory. The Android App for this lesson stores it's under credentials in an <a>SQLite database</a>. The Admin's password is the result key to this lesson.